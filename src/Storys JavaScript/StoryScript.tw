:: StoryScript [script]
// TO AUTOSAVE ON PASSAGES TAGGED "BOOKMARK" OR "AUTOSAVE" FOR THE "RESUME GAME" FEATURE ON LOAD SCREEN
Config.saves.autosave = ["bookmark", "autosave"];

// THIS IS WHERE YOU IMPORT YOUR OWN FONTAWESOME KIT URL
importScripts(
	'https://kit.fontawesome.com/14cbc407b4.js'
);

// IMPORTING FONTS FROM GOOGLE FONTS + ICONS FROM LINEAR ICONS
importStyles('https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Quicksand:wght@300;400;500;600;700&display=swap','https://cdn.linearicons.com/free/1.0.0/icon-font.min.css');

$(document).ready(function() {
	$("#menu-settings-button").on("click", function(){
		UI.settings();
	});
	
	$("#menu-restart-button").on("click", function(){
		UI.restart();
	});
		
	$("#menu-saves-button").on("click", function(){
		UI.saves();
	});
		
	$("#menu-fullscreen-button").on("click", function(){
		Fullscreen.toggle();
	});
	
		$("#header-settings-button").on("click", function(){
		UI.settings();
	});
	
	$("#header-restart-button").on("click", function(){
		UI.restart();
	});
		
	$("#header-saves-button").on("click", function(){
		UI.saves();
	});
		
	$("#header-fullscreen-button").on("click", function(){
		Fullscreen.toggle();
	});
	
	$("#menu-toggle").on("click", function() {
		$("header").toggleClass("toggled");

    var header = $("header");

    if(header.hasClass("toggled")) {
      $("#menu-toggle").html('<i class="fas fa-chevron-up"></i>');
    } else {
      $("#menu-toggle").html('<i class="fas fa-chevron-down"></i>')
    }
	});
	
	
	$("#backwards-button").on("click", function() {
		Engine.backward();
	});	
	
	$("#forwards-button").on("click", function() {
		Engine.forward();
	});
});

$(document).on(":passagestart", function() {
	if (!tags().includes("noreturn")) {
		/* If it doesn't, then set $return to the current passage name. */
		State.variables.return = passage();
	}
});

/*THEME FOR NIGHT AND DAY */

$(document).on(":passagedisplay", function(){
    var theme = State.getVar("$theme");

    if (theme == "day-theme") {
        $(':root').css({
            "--color1": "#94bbe9",
            "--color2": "#9793c8",
            "--color3": "#eeaeca"})
    } else if (theme == "night-theme"){
         $(':root').css({
            "--color1": "#771035",
            "--color2": "#b84c71",
            "--color3": "#d578a0"})           
    }
});

/*STAT BAR DATA*/
$(document).on(":passagedisplay", function(){
  
  var kindStat = State.getVar("$kind")+ "%";
  $("#kind-stat").attr("style", "width: " + kindStat);
  
});

$(document).on(":passagedisplay", function(){
  
  var boldStat = State.getVar("$bold")+ "%";
  $("#bold-stat").attr("style", "width: " + boldStat);
  
});


$(document).on(":passagedisplay", function(){
  
  var chrStat = State.getVar("$chr")+ "%";
  $("#chr-stat").attr("style", "width: " + chrStat);
  
});

$(document).on(":passagedisplay", function(){
  
  var intStat = State.getVar("$int")+ "%";
  $("#int-stat").attr("style", "width: " + intStat);
  
});

$(document).on(":passagedisplay", function(){
  
  var strStat = State.getVar("$str")+ "%";
  $("#str-stat").attr("style", "width: " + strStat);
  
});

$(document).on(":passagedisplay", function(){
  
  var magStat = State.getVar("$mag")+ "%";
  $("#mag-stat").attr("style", "width: " + magStat);
  
});

/*RELATIONSHIP BAR*/

$(document).on(":passagedisplay", function(){
  
  var npcStat = State.getVar("$npcLove")+ "%";
  $("#npcLove").attr("style", "width: " + npcStat);
  
});



$(document).on(":passageend", function() {
		$("#story-menu li a").on("click", function() {
		$("header").toggleClass("toggled");
			
    var header = $("header");
		
		if(header.hasClass("toggled")) {
      $("#menu-toggle").html('<i class="fas fa-chevron-up"></i>');
    } else {
      $("#menu-toggle").html('<i class="fas fa-chevron-down"></i>')
    }
	});
});

// CHANGE FONT FAMILY
var settingFontFamily = ["Sans-Serif", "Serif", "Open Dyslexic"];
var setFont = function() {
	var passages = document.getElementById("passages");
	switch (settings.fontFamily) {
		case "Sans-Serif":
			passages.style.fontFamily = "'Poppins', sans-serif";
			break;
	}
	switch (settings.fontFamily) {
		case "Serif":
			passages.style.fontFamily = "'Merriweather', serif";
			break;
	}
	switch (settings.fontFamily) {
		case "Open Dyslexic":
			passages.style.fontFamily = "'OpenDyslexic', serif";
			break;
	}
};

Setting.addList("fontFamily", {
	label		: "Change font",
	list		: settingFontFamily,
	onInit		: setFont,
	onChange	: setFont
});

// CHANGE FONT SIZE
var settingFontSize = ["16px", "18px", "20px", "22px", "24px"];
var setFontSize = function() {
	switch (settings.fontSize) {
		case "16px":
			passages.style.fontSize = "16px";
			break;
	}
	switch (settings.fontSize) {
		case "18px":
			passages.style.fontSize = "18px";
			break;
	}
	switch (settings.fontSize) {
		case "20px":
			passages.style.fontSize = "20px";
			break;
	}
	switch (settings.fontSize) {
		case "22px":
			passages.style.fontSize = "22px";
			break;
	}	
	switch (settings.fontSize) {
		case "24px":
			passages.style.fontSize = "24px";
			break;
	}
};

Setting.addList("fontSize", {
	label		: "Change font size",
	list		: settingFontSize,
	onInit		: setFontSize,
	onChange	: setFontSize
});

// CHANGE THEME
var themeList = ["Light Theme", "Dark Theme"];
var setTheme = function() {
			$(':root').css('--white', '#ffffff');
			$(':root').css('--black', '#111');
	
	switch(settings.theme) {
		case "Dark Theme":
			$(':root').css('--white', '#111');
			$(':root').css('--black', '#ffffff');

			break;
	}
};

Setting.addList("theme", {
	label			: "Change theme",
	list			: themeList,
	onInit		:	setTheme,
	onChange	: setTheme
});

// notify.min.js, for SugarCube 2, by Chapel
// v1.1.1, 2021-04-20, 53d1a20e9321b3782a303cf7dbe00f5c51e947db
;!function(){var s=/\d+m?s$/;function e(s,e,t){"string"==typeof s&&("number"!=typeof e&&(e=!1),$(document).trigger({type:":notify",message:s,delay:e,class:t||""}))}$(document.body).append("<div id='notify'></div>"),$(document).on(":notify",(function(s){s.message&&"string"==typeof s.message&&(s.message.trim(),s.class?"string"==typeof s.class?s.class="open macro-notify "+s.class:Array.isArray(s.class)?s.class="open macro-notify "+s.class.join(" "):s.class="open macro-notify":s.class="open macro-notify",s.delay?("number"!=typeof s.delay&&(s.delay=Number(s.delay)),Number.isNaN(s.delay)&&(s.delay=2e3)):s.delay=2e3,$("#notify").empty().wiki(s.message).addClass(s.class),setTimeout((function(){$("#notify").removeClass()}),s.delay))})),Macro.add("notify",{tags:null,handler:function(){var t=this.payload[0].contents,a=!1,n=!1;if(this.args.length>0){var i=s.test(this.args[0]);"number"==typeof this.args[0]||i?(a=i?Util.fromCssTime(this.args[0]):this.args[0],n=this.args.length>1&&this.args.slice(1).flatten()):n=this.args.flatten().join(" ")}e(t,a,n)}}),setup.notify=e}();
// end notify.min.js


// PRONOUN TEMPLATE
(function () {
    'use strict';
    // v1.1.0; by Chapel, for SugarCube 2 (>= v2.29.0)

    if (!Template || !Template.add || typeof Template.add !== 'function') {
        alert('Warning, this version of SugarCube does not include the Template API. Please upgrade to v2.29.0 or higher.');
        return;
    }

    // CONFIGURATION

    var config = {
        name : 'gender',
        showSetting : true,
        label : 'Gender',
        desc : '',
        storyVar : '%%gender',
        default : 'female' // female, male, or other
    };

    // DATA

    // the point-replace id
    var settingID = '#setting-control-' + config.name;

    // preset pronoun map
    var genderMap = {
        subjective : ['she', 'he', 'they'],
        objective : ['her', 'him', 'them'],
        possessive : ['hers', 'his', 'theirs'],
        determiner : ['her', 'his', 'their'],
        reflexive : ['herself', 'himself', 'themself'],
        noun : ['woman', 'man', 'person']
    };

    // INTERNAL FUNCTIONS

    // custom dialog function
    function createDialog (name, element, classes) {
        var reopen = false;
        if (Dialog.isOpen() && $('#ui-dialog-body').hasClass('settings')) {
            reopen = true;
        }
        Dialog.close();
        Dialog.setup(name, (reopen) ? classes + ' reopen' : classes);
        Dialog.append(element);
        Dialog.open();
    }

    function genderForm () { // create a form for users to configure their pronouns
        var $wrapper = $(document.createElement('div'));

        function createInput (label, name, def) { // create text inputs
            return $(document.createElement('label'))
                .append(label)
                .css('display', 'block')
                .append($(document.createElement('input'))
                    .attr({
                        type : 'text',
                        name : name
                    })
                    .css({
                        float : 'right',
                        'margin-left' : '0.2em'
                    })
                    .val(def)
                );
        }

        function createDropdown (label, name, list) { // create dropdowns
            var $select = $(document.createElement('select'))
                .attr('name', name)
                .css('float', 'right');
            list.forEach( function (opt, idx) {
                console.log(idx);
                $(document.createElement('option'))
                    .attr('value', String(idx))
                    .append(opt)
                    .appendTo($select);
            });
            return $(document.createElement('label')).css('display', 'block').append(label, $select);
        }

        var $inputs = Object.keys(genderMap).map( function (key) {
            // create an input for each type of pronoun
            var idx = 2;
            if (config.default === 'male') {
                idx = 1;
            } else if (config.default === 'female') {
                idx = 0;
            }
            var sv = State.variables;
            var def = genderMap[key][idx];
            if (sv[config.storyVar] && sv[config.storyVar][key]) {
                def = sv[config.storyVar][key];
            }
            return createInput(key.toUpperFirst() + ': ', 'gender-' + key, def);
        });

        var $presets = createDropdown('Presets: ', 'gender-preset', ['She/Her', 'He/Him', 'They/Them'])
            .on('change', function () {
                // auto-fill text inputs when the preset is changed
                var value = Number($(this).find('select').val());
                if (!Number.isNaN(value)) {
                    $inputs.forEach( function ($input) {
                        var $text = $input.find('input');
                        var type = $text.attr('name').split('-')[1];
                        $text.val(genderMap[type][value]);
                    });
                }
            });

        var $select = $presets.find('select');
        if (!State.variables[config.storyVar]) {
            // set defaults
            if (config.default === 'male') {
                $select.val('1');
            } else if (config.default === 'female') {
                $select.val('0');
            } else {
                $select.val('2');
            }
        } else {
            $select.val(''); // custom config, no preset
        }
        
        var $confirm = $(document.createElement('button'))
            .wiki('Confirm')
            .addClass('gender-confirm')
            .ariaClick({ label : 'Confirm pronoun selection.' }, function () {
                // this button saves the pronoun config settings
                var sv = State.variables;
                sv[config.storyVar] = {};
                $inputs.forEach( function ($input) {
                    var $text = $input.find('input');
                    var type = $text.attr('name').split('-')[1];
                    sv[config.storyVar][type] = $text.val().trim().toLowerCase();
                });
                // reopen the settings modal or close the modal
                if ($('#ui-dialog-body').hasClass('reopen')) {
                    UI.settings();
                }
                Dialog.close();
            });

        var $form = (function () {
            // add some line breaks to the generated form
            var $els = [$presets, '<br>'];
            $inputs.forEach( function ($input) {
                $els.push($input);
                $els.push('<br>');
            });
            $els.push($confirm);
            return $els;
        }());

        return $wrapper.append($form);

    }

    // CORE FUNCTIONS

    function handleGender () {
        // this function opens the custom modal
        createDialog('Customize Gender', genderForm(), 'custom-gender');
    }

    function getFromPreset (n) {
        // default
        if (typeof n !== "number" || Number.isNaN(n) || n > 2 || n < 0) {
            n = 0;
        }
        var ret = {};
        Object.keys(genderMap).forEach( function (key) {
            ret[key] = genderMap[key][n];
        });
        return ret;
    }

    function getGender () {
        // get the player's gender (custom or grab the default)
        // custom
        if (State.variables[config.storyVar] && State.variables[config.storyVar].subjective) {
            return State.variables[config.storyVar];
        }
        // default
        return getFromPreset(config.default === 'male' ? 1 : 0);
    }

    function setPreset (gender) {
        var pn;
        switch (gender) {
            case 'female':
                pn = getFromPreset(0);
                break;
            case 'male':
                pn = getFromPreset(1);
                break;
            default:
                pn = getFromPreset(2);
        }
        State.variables[config.storyVar] = clone(pn);
        return pn;
    }

    function setPronouns (obj) {
        if (typeof obj !== 'object') {
            return;
        }
        State.variables[config.storyVar] = setPreset(config.default === 'male' ? 1 : 0);
        return Object.assign(State.variables[config.storyVar], obj);
    }

    // SETTINGS API

    if (config.showSetting) {
        Setting.addToggle(config.name, {
            label : config.label,
            desc : (config.desc && typeof config.desc === 'string' && config.desc.trim()) ? 
                config.desc.trim() : undefined
        });

        $(document).on(':dialogopen :dialogopened', function () {
            if ($('#ui-dialog-body').hasClass('settings')) {
                $(settingID).parent('div').empty().append( $(document.createElement('button'))
                    .append('Adjust')
                    .ariaClick( function () {
                        handleGender();
                    })
                );
            }
        });
    }

    // singular endings
    var replaceWith_are = /^is$/i; // is
    var replaceWith_were = /^was$/i; // was
    var replaceWith_have = /^has$/i; // has
    var replaceWith_o = /oes$/i; // does, goes
    var replaceWith_ie = /^[dl]ies$/i; // dies
    var replaceWith_y = /ies$/i; // dries
    var remove_es = /sses$/i; // posesses
    var remove_es2 = /hes$/i; // catches
    var remove_s = /s$/i; // surpises, plays
    // the above are tested in order; if none apply, return singular form (e.g: ran -> ran)

    // test for 'they' pronoun
    var hasThey = /they/i;

    function makePlural (singular) {
        if (!singular || typeof singular !== 'string') {
            return singular;
        }
        singular = singular.trim();
        if (replaceWith_are.test(singular)) {
            return singular.replace(replaceWith_are, 'are');
        }
        if (replaceWith_were.test(singular)) {
            return singular.replace(replaceWith_were, 'were');
        }
        if (replaceWith_have.test(singular)) {
            return singular.replace(replaceWith_have, 'have');
        }
        if (replaceWith_o.test(singular)) {
            return singular.replace(replaceWith_o, 'o');
        }
        if (replaceWith_ie.test(singular)) {
            // need to use replaceWith_y regex here.
            return singular.replace(replaceWith_y, 'ie');
        }
        if (replaceWith_y.test(singular)) {
            return singular.replace(replaceWith_y, 'y');
        }
        if (remove_es.test(singular)) {
            return singular.replace(remove_es, 'ss');
        }
        if (remove_es2.test(singular)) {
            return singular.replace(remove_es2, 'h');
        }
        if (remove_s.test(singular)) {
            return singular.replace(remove_s, '');
        }
        return singular;
    }

    function _getPronounsArePlural () {
        return hasThey.test(getGender().subjective.trim());
    }

    // usage: pluralize('dries', null, true) -> dry; pluralize('supresses', 'supress') -> supresses
    function pluralize (singular, plural, forcePlural) {
        if (!forcePlural) {
            return singular;
        }
        if (plural && typeof plural === 'string') {
            return plural;
        }
        return makePlural(singular);
    }

    // TEMPLATES

    function isUpper (name, string) {
        // is name is uppercase, return uppercased string
        if (name.first() === name.first().toUpperCase()) {
            return string.toUpperFirst();
        }
        return string;
    }
    
    Template.add(['he', 'she', 'they', 'He', 'She', 'They'], function () {
        return isUpper(this.name, getGender().subjective);
    });
    Template.add(['him', 'her', 'them', 'Him', 'Her', 'Them'], function () {
        return isUpper(this.name, getGender().objective);
    });
    Template.add(['his', 'hers', 'theirs', 'His', 'Hers', 'Theirs'], function () {
        return isUpper(this.name, getGender().possessive);
    });
    Template.add(['his_', 'her_', 'their', 'His_', 'Her_', 'Their'], function () {
        return isUpper(this.name, getGender().determiner);
    });
    Template.add(['himself', 'herself', 'themself', 'Himself', 'Herself', 'Themself'], function () {
        return isUpper(this.name, getGender().reflexive);
    });
    Template.add(['man', 'woman', 'person', 'Man', 'Woman', 'Person'], function () {
        return isUpper(this.name, getGender().noun);
    });
    Template.add(['he-s', 'she-s', 'they-re', 'He-s', 'She-s', 'They-re'], function () {
        return isUpper(this.name, getGender().subjective + pluralize("&apos;s", "&apos;re", _getPronounsArePlural()));
    });

    // MACRO

    // `<<pronouns>>` -> opens the modal for pronoun configuration, probably best paired with a link
    Macro.add('pronouns', {
        skipArgs : true,
        handler : function () {
            handleGender();
        }
    });

    // <<verb singular [plural] [makePlural]>>
    Macro.add('verb', {
        handler: function () {
            var pl = _getPronounsArePlural();

            if (this.args.length < 1) {
                return this.error('Please pass at least a singular third person pronoun to this macro.');
            }

            if (this.args.includes('plural')) {
                pl = true;
            }

            this.output.append(pluralize(String(this.args[0]), (this.args[1]) ? String(this.args[1]) : null, !!pl));
        }
    });

    // JAVASCRIPT API

    setup.gender = {
        // get the pronoun object; `setup.gender.pronouns().subjective` -> get `he`, `she`, etc
        pronouns : getGender,
        // set pronouns from presets or manually
        setPronouns : function (presetOrObj) {
            if (typeof presetOrObj === 'string') {
                return setPreset(presetOrObj);
            }
            if (typeof presetOrObj === 'object') {
                return setPronouns(presetOrObj);
            }
        },
        // open the pronoun config modal from JS; `setup.gender.dialog()`
        dialog : handleGender,
        // pluralizer function
        pluralize : makePlural
    };

    window.gender = window.gender || setup.gender;

}());


// Simple Inventory, for SugarCube 2, by Chapel
// v3.0.0-beta1, 2022-07-25, 19f255d958852e55a8a3afcde5c53331f0d938e8
;"use strict";function _typeof(t){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_typeof(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}!function(){var t={description:"",handler:null,displayName:"",consumable:!0,unique:!1,permanent:!1},e=new Map,n=function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:clone(t),r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(_classCallCheck(this,n),!e||"string"!=typeof e)throw new Error("invalid item ID");if("object"!==_typeof(i))throw new Error("invalid item definition");Object.assign(this,Object.assign(t,i)),this.id=e,this.tags=r instanceof Array?r:"string"==typeof r?[r]:[]}return _createClass(n,[{key:"name",get:function(){return this.displayName||this.id},set:function(t){this.displayName=t}},{key:"use",value:function(){return"string"==typeof this.handler?$.wiki(this.handler):"function"==typeof this.handler&&this.handler(this),this}},{key:"inspect",value:function(){return Dialog.setup(this.name,"simple-inventory item-description"),Dialog.wiki(this.description),Dialog.open(),this}}],[{key:"is",value:function(t){return t instanceof n}},{key:"add",value:function(t,i,r){var a=new n(t,i,r);return e.set(t,a),a}},{key:"get",value:function(t){return e.get(t)}},{key:"has",value:function(t){return e.has(t)}},{key:"list",get:function(){return e}}]),n}();setup.Item=n,window.Item=window.Item||n}(),function(){var t=setup.Item,e=!1,n="&hellip;",i={inspect:"Inspect",use:"Use",drop:"Drop",stack:"stack",take:"Take",give:"Give",stackPre:"&nbsp;&times;&nbsp;",stackPost:"&nbsp;"},r={};function a(e){return t.has(e)&&t.get(e).unique}function s(e){return t.has(e)&&t.get(e).permanent}function o(t){return t&&"string"==typeof t&&t.trim()}var u=function(){function u(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];_classCallCheck(this,u),this.data=clone(t),this.tags=e instanceof Array?e:"string"==typeof e?[e]:[]}return _createClass(u,[{key:"emit",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return u.emit(t,this,e),this}},{key:"array",get:function(){var t=this,e=[];return Object.keys(this.data).forEach((function(n){if(e.push(n),t.data[n]>1)for(var i=1;i<t.data[n];i++)e.push(n)})),e}},{key:"list",get:function(){return Object.keys(this.data)}},{key:"length",get:function(){return this.array.length}},{key:"uniqueLength",get:function(){return this.list.length}},{key:"table",get:function(){return this.data}},{key:"count",value:function(t){return t?this.data[t]||0:this.length}},{key:"has",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.data[t]>=e}},{key:"hasAll",value:function(){var t=this,e=[].slice.call(arguments).flat(1/0);return e.every((function(e){return t.has(e)}))}},{key:"hasAny",value:function(){var t=this,e=[].slice.call(arguments).flat(1/0);return e.some((function(e){return t.has(e)}))}},{key:"compare",value:function(t){var e=this,n=u.itemset(t);return Object.keys(n).every((function(t){return e.has(t,n[t])}))}},{key:"merge",value:function(t){var e=this,n=u.itemset(t);return Object.keys(n).forEach((function(t){u.change(e,t,n[t])})),n}},{key:"unmerge",value:function(t){var e=this,n={},i=u.itemset(t);return Object.keys(i).forEach((function(t){e.has(t,i[t])?n[t]=i[t]:e.has(t)&&(n[t]=e.count(t)),u.change(e,t,i[t],!0)})),n}},{key:"pickup",value:function(){var t=this.merge(u.parseArgList.apply(null,arguments));return this.emit("update",{delta:t}),this}},{key:"drop",value:function(){var t=this.unmerge(u.parseArgList.apply(null,arguments));return this.emit("update",{delta:t}),this}},{key:"empty",value:function(){var t=clone(this.data);return this.data={},this.emit("update",{delta:t}),this}},{key:"transfer",value:function(t){var e=u.parseArgList.apply(null,[].slice.call(arguments).slice(1));if(!u.is(t))throw new TypeError("target inventory is not an inventory instance");var n=this.unmerge(e);return t.merge(n),this.emit("update",{target:t,delta:n}),this}},{key:"isEmpty",value:function(){return 0===this.length}},{key:"iterate",value:function(t){var e=this;return"function"!=typeof t||this.list.forEach((function(n){t(n,e.data[n])})),this}},{key:"use",value:function(e){if(t.has(e)){var n=t.get(e);if(n.use(),n.consumable){u.change(this,e,1,!0);var i={};i[e]=1,this.emit("update",{delta:i})}return this.emit("use",{item:n}),this}}},{key:"clone",value:function(){return new u(this.data||{},this.tags||[])}},{key:"toJSON",value:function(){return JSON.reviveWrapper("new setup.Inventory("+JSON.stringify(this.data)+", "+JSON.stringify(this.tags)+")")}}],[{key:"confirm",get:function(){return e},set:function(t){e="string"==typeof t&&"all"===t.trim().toLowerCase()?"all":"string"==typeof t&&"stack"===t.trim().toLowerCase()?"stack":!!t}},{key:"emptyMessage",get:function(){return n},set:function(t){"string"==typeof t&&(n=t)}},{key:"strings",get:function(){return Object.assign(clone(i),r)},set:function(t){"object"===_typeof(t)&&(r=Object.assign(r,clone(t)))}},{key:"change",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(0!==n){if(t instanceof u&&(t=t.data),"object"!==_typeof(t)){if(t)throw new TypeError("cannot access inventory data");t={}}if(!o(e))throw new TypeError("invalid item name/id");if("number"==typeof n&&!Number.isNaN(n)&&Number.isInteger(n)||(n=1),i&&(n*=-1),n>0){if(Object.keys(t).includes(e)&&a(e))return;Object.keys(t).includes(e)||(t[e]=0),t[e]+=n}else{if(s(e))return;Object.keys(t).includes(e)&&"number"==typeof t[e]&&(t[e]+=n),t[e]<=0&&delete t[e]}return t}}},{key:"itemset",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(u.is(t)&&(t=t.data),"object"!==_typeof(t))return{};var e={};return Object.keys(t).forEach((function(n){"number"==typeof t[n]&&Number.isInteger(t[n])&&0!==t[n]&&(e[n]=t[n])})),e}},{key:"parseArgList",value:function(){var t=[].slice.call(arguments).flat(1/0);if(t.length%2!=0)throw new Error("item sets should be pairs of item IDs and numbers");var e={};return t.forEach((function(n,i){i%2==0&&(e[n]=t[i+1])})),e}},{key:"is",value:function(t){return t instanceof u}},{key:"emit",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};$(document).trigger(Object.assign({type:":inventory-"+t+".simple-inventory",inventory:e,target:null,delta:{},item:null},n))}},{key:"create",value:function(t,e){return new u(t,e)}}]),u}();setup.Inventory=u,window.Inventory=window.Inventory||u}(),function(){var t=setup.Item,e=setup.Inventory;function n(e){return t.has(e)&&t.get(e).permanent}function i(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Alert",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"Are you sure?";if(!t||"function"!=typeof t)throw new Error("Invalid confirmation callback!");if(e.confirm)if("all"!==e.confirm||"all"===i)if("stack"!==e.confirm||i){var s={display:"inline-block",float:"right"},o=$(document.createElement("div")),u=$(document.createElement("p")).append(a),l=$(document.createElement("div")).addClass("confirmation-buttons"),c=$(document.createElement("button")).append("Okay").addClass("confirm-yes").css(Object.assign(s,{"margin-right":"0.5rem"})),d=$(document.createElement("button")).append("Cancel").addClass("confirm-no").css(s);t&&"function"==typeof t&&c.ariaClick(t),n&&"function"==typeof n&&d.ariaClick(n),l.append(d,c),o.append(u,l),Dialog.setup(r,"simple-inventory confirmation"),Dialog.append(o),Dialog.open()}else t();else t();else t()}function r(t){var e=$(document.createElement("span")).addClass("spacer");return t&&e.wiki(""+t),e}function a(n,i,r){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return r=r||e.strings.inspect,$(document.createElement(a?"button":"a")).addClass("inspect-link").wiki(""+r).ariaClick((function(){t.get(i).inspect()}))}function s(t,n,i){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return i=i||e.strings.use,$(document.createElement(r?"button":"a")).addClass("use-link").wiki(""+i).ariaClick((function(){t.use(n)}))}function o(t,n,r){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;return r=r||(s?e.strings.give:e.strings.drop),$(document.createElement(a?"button":"a")).addClass("drop-link").wiki(""+r).ariaClick((function(){i((function(){s&&e.is(s)?t.transfer(s,n,1):t.drop(n,1),Dialog.close()}),(function(){Dialog.close()}))}))}function u(t,n,r){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;return r=r||(s?e.strings.give:e.strings.drop)+"&nbsp;"+e.strings.stack,$(document.createElement(a?"button":"a")).addClass("stack-link drop-link").wiki(""+r).ariaClick((function(){i((function(){s&&e.is(s)?t.transfer(s,n,t.count(n)):t.drop(n,t.count(n)),Dialog.close()}),(function(){Dialog.close()}))}))}function l(t,n){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return n=n||(a?e.strings.give:e.strings.drop),$(document.createElement(r?"button":"a")).addClass("all-link drop-link").wiki(n+" all").ariaClick((function(){t.isEmpty()||i((function(){a&&e.is(a)?(a.merge(t),t.empty()):t.empty(),Dialog.close()}),(function(){Dialog.close()}),!0)}))}function c(t,n,i,r){return i=i||e.strings.stackPre,r=r||e.strings.stackPost,$(document.createElement("span")).addClass("item-count").append(""+i+(t.count(n)||0)+r)}function d(i){var d,f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{description:!0,use:!0,transfer:null,drop:!0,all:!0,stack:!0,dropActionText:"",classes:""},p=$(document.createElement("ul")).addClass("simple-inventory-list");if(i.length){if(d=i.list.map((function(l){var d=[];return f.description&&t.has(l)&&t.get(l).description?d.push(a(i,l,t.has(l)?t.get(l).name:l)):d.push($(document.createElement("span")).append(t.has(l)?t.get(l).name:l).addClass("item-name")),d.push(c(i,l)),f.use&&t.has(l)&&t.get(l).handler?d.push(s(i,l)):d.push(r()),(f.transfer&&e.is(f.transfer)||f.drop)&&!n(l)?(d.push(o(i,l,f.dropActionText,!1,f.transfer||null)),i.count(l)>1&&f.stack?d.push(u(i,l,f.dropActionText+"&nbsp;"+e.strings.stack,!1,f.transfer||null)):d.push(r())):d.push(r()),$(document.createElement("li")).append(d).addClass("simple-inventory-listing")})),f.all){var h=$(document.createElement("li")).addClass("all-listing simple-inventory-listing").append([r("&mdash;"),r(),r(),l(i,f.dropActionText,!1,f.transfer||null)]);d.push(h)}}else d=$(document.createElement("li")).addClass("simple-inventory-listing").append($(document.createElement("span")).wiki(e.emptyMessage));return p.append(d),p}e.prototype.interface=function(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=this,r=$(document.createElement("div")).addClass("simple-inventory-wrapper");return r.append(d(this,e)),$(document).on(":inventory-update.simple-inventory.gui-built-in",(function(){r.length?r.empty().append(d(i,e)):$(document).off(":inventory-update.simple-inventory.gui-built-in")})),n&&n instanceof $?t=n:n&&(t=$(n)),t&&r.appendTo(t),r}}(),function(){setup.Inventory,setup.Item;var t=".simple-inventory-userland",e=":inventory-update.simple-inventory"+t,n=":inventory-use.simple-inventory"+t;function i(t){return t&&"function"==typeof t}Object.assign(setup.Inventory,{events:{update:{on:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";i(t)&&$(document).on(e+n,t)},one:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";i(t)&&$(document).one(e+n,t)},off:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";$(document).off(e+t)}},use:{on:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";i(t)&&$(document).on(n+e,t)},one:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";i(t)&&$(document).one(n+e,t)},off:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";$(document).off(n+t)}}}})}(),function(){var t=function(t){if(!Story.has(t))return{};var e,n,i,r,a=(e=Story.get(t).text,i=function(t){return t.replace(/\r+/g,"\n").replace(/\n+/,"\n").replace(/ +/g," ").trim().split(/\n/g)}(e),r={},i.forEach((function(t){var e=function(t,e){return e=e||":",t.trim().split(e)}(t,n);r[e[0].trim()]=e[1].trim()})),r);return a}("inventory.strings");t.empty&&"string"==typeof t.empty&&t.empty.trim()&&(setup.Inventory.emptyMessage=t.empty,delete t.empty),setup.Inventory.strings=t||{}}(),function(){var t=setup.Item,e=setup.Inventory;function n(t){return t&&"string"==typeof t&&t.length>2&&("$"===t[0]||"_"===t[0])}function i(t){if(n(t)&&(t=State.getVar(t)),e.is(t))return t}Macro.add(["item","consumable"],{tags:["description","tags","unique","permanent"],handler:function(){var e,n,i,r,a=null,s=!1,o=!1,u=!1;if(State.length>0)return this.error("items must be defined in `StoryInit` or story JavaScript!");if(!this.args[0]||"string"!=typeof this.args[0]||!this.args[0].trim())return this.error("invalid item ID");if(e=this.args[0].trim(),"consumable"===this.name&&(a=this.payload[0].contents||null,s=!0),this.args[1]&&(n=this.args[1]),this.payload.length>1){var l=this.payload.find((function(t){return"description"===t.name})),c=this.payload.find((function(t){return"tags"===t.name})),d=this.payload.find((function(t){return"unique"===t.name})),f=this.payload.find((function(t){return"permanent"===t.name}));l&&(i=l.contents.trim()),c&&(r=c.args.flat(1/0)),d&&(o=!0),f&&(u=!0)}t.add(e,{displayName:n||"",description:i||"",handler:a,consumable:s,unique:o,permanent:u},r)}}),Macro.add("newinv",{handler:function(){var t=this.args.raw.trim().split(" ").first().replace(/["']/g,"").trim();if(!n(t))return this.error("argument must be a story or temporary variable!");State.setVar(t,new e({},this.args.flat(1/0).slice(1)))}}),Macro.add(["pickup","drop"],{handler:function(){var t=i(this.args[0]);return t?this.args.length<3?this.error("no items to pick up were provided"):void t[this.name](this.args.slice(1)):this.error("first argument must be a valid inventory!")}}),Macro.add("dropall",{handler:function(){var t=i(this.args[0]);if(!t)return this.error("first argument must be a valid inventory!");t.empty()}}),Macro.add(["transfer","merge","unmerge"],{handler:function(){var t=i(this.args[0]);if(!t)return this.error("first argument must be a valid inventory!");var e=i(this.args[1]);if(!e)return this.error("second argument must be a valid inventory!");if("transfer"===this.name){if(this.args.length<4)return this.error("no items to transfer were provided");t.transfer(e,this.args.slice(2))}else t[this.name](e)}}),Macro.add(["inv","take","give"],{handler:function(){var t=null,n=i(this.args[0]);if(!n)return this.error("first argument must be a valid inventory!");this.args[1]&&i(this.args[1])&&(t=i(this.args[1]));var r={description:this.args.includesAny("inspect","description"),use:this.args.includes("use"),transfer:t,drop:this.args.includes("drop"),all:this.args.includes("all"),stack:this.args.includes("stack"),dropActionText:"inv"===this.name?"Drop":e.strings[this.name.trim().toLowerCase()],classes:"macro-".concat(this.name)};n.interface(r,$(this.output))}})}(),function(){var t=setup.Item,e=setup.Inventory;function n(t,e,n){if("object"!==_typeof(e))throw new TypeError("the extension should be a plain generic object holding the properties and methods you want to add");Object.keys(e).forEach((function(i){if(t[i]&&!n)throw new Error('Cannot override existing property "'+i+'"!');t[i]=e[i]}))}Object.assign(e,{extend:function(t){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];n(e,t,i)},extendPrototype:function(t){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];n(e.prototype,t,i)}}),Object.assign(t,{extend:function(e){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];n(t,e,i)},extendPrototype:function(e){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];n(t.prototype,e,i)}})}();
// End Simple Inventory

//Click to Proceed

(function () {
	"use strict";

	$(document).on(":passageinit", () => {
		CTP.Logs.forEach((_, id) => {
			if (!CTP.Repository.get(id)?.persist) CTP.Logs.delete(id);
		});
		CTP.Repository.forEach(({ persist }, id) => {
			if (!persist) CTP.Repository.delete(id);
		});
	});

	window.CTP = class CTP {
		constructor(id, persist = false) {
			this.stack = [];
			this.clears = [];
			this.options = {};
			if (!id?.trim()) throw new Error(`No ID specified!`);
			this.id = id;
			this.persist = persist;
			CTP.Repository.set(id, this);
		}

		static get Repository() {
			if (!setup["@CTP/Repository"]) setup["@CTP/Repository"] = new Map();
			return setup["@CTP/Repository"];
		}

		static get Logs() {
			if (!variables()["@CTP/Logs"]) variables()["@CTP/Logs"] = new Map();
			return variables()["@CTP/Logs"];
		}

		get log() {
			if (!CTP.Logs.get(this.id)) CTP.Logs.set(this.id, { lastClear: -1, index: -1, seen: -1 });
			return CTP.Logs.get(this.id);
		}

		static getCTP(id) {
			return CTP.Repository.get(id);
		}

		add(content, options = {}) {
			options = {
				...this.options,
				...options
			};
			if (options.clear) this.clears.push(this.stack.length);
			this.stack.push({
				options, content,
				index: this.stack.length,
				element: $()
			});
			return this;
		}

		print(index) {
			const { content, options: iOpts } = this.stack[index];
			const options = {
				...this.options,
				...iOpts
			};
			const element = $(document.createElement(options.element || "span"))
				.addClass("--macro-ctp-hidden")
				.attr({
					"data-macro-ctp-id": this.id,
					"data-macro-ctp-index": index,
				})
				.on("update-internal.macro-ctp", (event, firstTime) => {
					if ($(event.target).is(element)) {
						if (index === this.log.index) {
							if (firstTime) {
								if (typeof content === "string") element.wiki(content);
								else element.append(content);
								element.addClass(options.transition ? "--macro-ctp-t8n" : "");
							}
							element.removeClass("--macro-ctp-hidden");
						} else {
							if (index < this.log.seen) element.removeClass("--macro-ctp-t8n");
							element.toggleClass("--macro-ctp-hidden", index > this.log.index || index < this.log.lastClear);
						}
					}
				});
			this.stack[index].element = element;
			return element;
		}

		output() {
			const wrapper = document.createDocumentFragment();
			for (let i = 0; i < this.stack.length; i++) {
				this.print(i).appendTo(wrapper);
			}
			return wrapper;
		}

		advance() {
			if (this.log.index < this.stack.length - 1) {
				this.log.index++;
				const firstTime = this.log.index > this.log.seen;
				this.log.seen = Math.max(this.log.seen, this.log.index);
				this.log.lastClear = this.clears.slice().reverse().find(el => el <= this.log.index) ?? -1;
				$(document).trigger("update.macro-ctp", ["advance", this.id, this.log.index]);
				this.stack.forEach(({ element }) => element.trigger("update-internal.macro-ctp", [firstTime, "advance", this.id, this.log.index]));
			}
			return this;
		}

		back() {
			if (this.log.index > 0) {
				this.log.index--;
				this.log.lastClear = this.clears.slice().reverse().find(el => el <= this.log.index) ?? -1;
				$(document).trigger("update.macro-ctp", ["back", this.id, this.log.index]);
				this.stack.forEach(({ element }) => element.trigger("update-internal.macro-ctp", [false, "back", this.id, this.log.index]));
			}
			return this;
		}
	}

	Macro.add("ctp", {
		tags: ["ctpNext"],
		handler() {
			const id = this.args[0];
			const persist = this.args.slice(1).includes("persist");
			const ctp = new CTP(id, persist);
			const _passage = passage();
			this.payload.forEach(({ args, name, contents }) => {
				const options = {};
				if (args.includes("clear")) options.clear = true;
				if (args.includesAny("t8n", "transition")) options.transition = true;
				const elementArg = (args.find((el) => el.startsWith("element:")) ?? "");
				if (elementArg) options.element = elementArg.replace("element:", "");
				if (name === "ctp") ctp.options = { ...options };
				ctp.add(contents, options);
			});
			$(this.output).append(ctp.output());
			$(document).one(":passagedisplay", () => {
				if (_passage === passage()) {
					const i = Math.max(ctp.log.index, 0);
					ctp.log.index = -1;
					ctp.log.seen = -1;
					while (ctp.log.index < i) ctp.advance();
				}
			});
		}
	});

	Macro.add("ctpAdvance", {
		handler() {
			const id = this.args[0];
			if (id) {
				const ctp = CTP.getCTP(id);
				if (ctp) ctp.advance();
				else throw new Error(`No CTP with ID '${id}' found!`);
			} else throw new Error(`No ID specified!`);
		}
	});

	Macro.add("ctpBack", {
		handler() {
			const id = this.args[0];
			if (id) {
				const ctp = CTP.getCTP(id);
				if (ctp) ctp.back();
				else throw new Error(`No CTP with ID '${id}' found!`);
			} else throw new Error(`No ID specified!`);
		}
	});
})();

//End Click to Proceed

